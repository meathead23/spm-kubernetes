{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./src/pages/deployment/hc_deployment.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","InlineNotification","Tabs","Tab","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-deployment-hc-deployment-mdx-c1a45cc32c880536bb0d.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` As of Release 20.7.0, the Helm version used to verify this runbook is 3.2. All the Helm commands that are used in this runbook are based on Helm v3.`}</p>\n    </InlineNotification>\n    <p>{`In the following `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` command, we are using `}<inlineCode parentName=\"p\">{`releasename`}</inlineCode>{` as the value for the `}<inlineCode parentName=\"p\">{`helm release name`}</inlineCode>{`. A release name is an arbitrary name that you choose for your\ndeployment. It must be all lowercase. All kubernetes objects in your deployment will be prefixed with whatever value you provide.`}</p>\n    <p>{`For now you could just use `}<inlineCode parentName=\"p\">{`releasename`}</inlineCode>{` and for more information see `}<a parentName=\"p\" {...{\n        \"href\": \"https://helm.sh/docs/intro/using_helm/\"\n      }}>{`the helm documentation`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Helm v3 ('releasename' is mandatory for Helm v3)\nhelm install releasename local-development/spm\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` command installs the Helm charts in the order in which they were loaded in the repository, with all the values defined in the files.\nHowever, as described in `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/build-images/setup_docker_context\"\n      }}>{`Setting up the Docker® context`}</a>{`, you can override the configuration value by running the following shell script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Helm v3\nhelm install releasename local-development/spm -f override-values.yaml\n`}</code></pre>\n    <h3>{`Sample `}<inlineCode parentName=\"h3\">{`override-values.yaml`}</inlineCode>{` files`}</h3>\n    <p>{`The following three override files for Minikube, IKS, and CRC are intended to be used with the config options listed in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/deployment/config-reference\"\n      }}>{`Configuration Reference`}</a>{` topic. The minimum details that need to be filled out for a successful deployment\nare the registry, database, and ingress details.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/spm-kubernetes/resources/minikube-values.yaml\"\n        }}>{`Minikube`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/spm-kubernetes/resources/crc-values.yaml\"\n        }}>{`CodeReady Containers`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/spm-kubernetes/resources/iks-values.yaml\"\n        }}>{`IBM Cloud Kubernetes Service`}</a></li>\n    </ul>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note on IKS overrides:`}</strong></p>\n      <ul>\n        <li parentName=\"ul\">{`The full image name is based on the `}<inlineCode parentName=\"li\">{`registry`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`imageLibrary`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`imagePrefix`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`imageTag`}</inlineCode>{` keys nested under `}<inlineCode parentName=\"li\">{`global.images`}</inlineCode>{` as follows:`}\n          <ul parentName=\"li\">\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`{registry}/{imageLibrary}/{imagePrefix}curam:{imageTag}`}</inlineCode></li>\n            <li parentName=\"ul\">{`With the given values, the resulting image name will look like this: `}<inlineCode parentName=\"li\">{`us.icr.io/foo-library/test_curam:latest`}</inlineCode></li>\n          </ul>\n        </li>\n        <li parentName=\"ul\">{`IAM credentials for the `}<a parentName=\"li\" {...{\n            \"href\": \"https://cloud.ibm.com/docs/containers?topic=containers-registry\"\n          }}>{`IBM Container Registry`}</a>{` (`}<inlineCode parentName=\"li\">{`global.imagePullSecret`}</inlineCode>{`) must be provided.`}</li>\n        <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n            \"href\": \"https://cloud.ibm.com/docs/containers?topic=containers-ingress_annotation#alb-id\"\n          }}>{`Application Load Balancer IDs`}</a>{` (`}<inlineCode parentName=\"li\">{`ingress.annotations.\"ingress.bluemix.net/ALB-ID\"`}</inlineCode>{`) must be provided for the Ingress resource to be created correctly.`}</li>\n      </ul>\n    </InlineNotification>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note`}</strong>{`: If storage has been initialized using a version of the runbook older than 20.9.0, you will need to update your\noverride values to include a supplementary group:`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-yaml\"\n        }}>{`global:\n  mq:\n    security:\n      context:\n        supplementalGroups: [888]\n`}</code></pre>\n      <p>{`This is due to a update in IBM MQ, the details of which can be found `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/IBM/charts/blob/master/stable/ibm-mqadvanced-server-dev/RELEASENOTES.md\"\n        }}>{`here`}</a>{`.`}</p>\n    </InlineNotification>\n    <p>{`The license agreements for the IBM® WebSphere® Liberty and IBM WebSphere MQ images must be accepted in order to proceed with the deployment of these elements. This can be done by setting the `}<inlineCode parentName=\"p\">{`global.license`}</inlineCode>{` property to `}<inlineCode parentName=\"p\">{`accept`}</inlineCode>{`.`}</p>\n    <p>{`The respective license agreements can be reviewed by running the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# IBM WebSphere Liberty\ndocker run --rm -e LICENSE=view ibmcom/websphere-liberty:20.0.0.9-full-java8-ibmjava-ubi\n\n# IBM WebSphere MQ\ndocker run --rm -e LICENSE=view ibmcom/mq:9.1.3.0\n`}</code></pre>\n    <h2>{`Status of the system`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` command shows all the Kubernetes objects and also runs the IBM® Cúram Social Program Management (SPM) containers.\nYou can track the status of the SPM containers on real time by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get pods -w\n\nNAME                                              READY  STATUS    RESTARTS  AGE\nreleasename-apps-curam-consumer-595c8bf95f-zn2l5  0/1    Init 3/4  0         5m\nreleasename-apps-curam-producer-6b5569c4ff-nvxtd  1/1    Running   0         5m\nreleasename-apps-rest-consumer-85b4865b9d-wr6hj   0/1    Init 3/4  0         5m\nreleasename-apps-rest-producer-cd8fdbbbf-j2mjj    0/1    Init 3/4  0         5m\nreleasename-uawebapp-7cdd64987-qx8l8              1/1    Running   0         5m\nreleasename-web-67697ffb8b-fdsk2                  1/1    Running   0         5m\nreleasename-mqserver-curam-7f45bcd64d-rlqns       1/1    Running   0         5m\nreleasename-mqserver-rest-544c5b4758-pnbpz        1/1    Running   0         5m\nreleasename-xmlserver-77d6d9b75d-4xr8k            1/1    Running   0         5m\n\n`}</code></pre>\n    <p>{`The command lists the pods and their status, where each status change is on a new line.`}</p>\n    <p>{`Some of the pods have initialization steps, so they are not shown until the steps are completed.`}</p>\n    <p>{`The output of the `}<inlineCode parentName=\"p\">{`kubectl get pods`}</inlineCode>{` command provides the names of the pods that you can use to substitute for `}<inlineCode parentName=\"p\">{`podname`}</inlineCode>{` in the following example commands.\nFor example, the Liberty pod that contains SPM code is a name that uses a pattern of: `}<inlineCode parentName=\"p\">{`releasename-apps-curam-`}</inlineCode>{`.`}</p>\n    <p>{`You can also describe a pod by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl describe pod/pod name\n`}</code></pre>\n    <p>{`You can also read the log when the status is `}<inlineCode parentName=\"p\">{`running`}</inlineCode>{`, by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl logs -f pod/podname\n`}</code></pre>\n    <h2>{`Accessing the application`}</h2>\n    <p>{`To access the application, a URL is provided to access the pod within the cluster. This access is provided using Ingress resources on Kubernetes, and Routes resources on OpenShift.`}</p>\n    <p>{`Example URLs:`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Minikube\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`https://minikube.local/Curam\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"CRC\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`https://spm-ocp.apps-crc.testing/Curam\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"IKS\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`https://spm.<cluster_name>-<hash>-0000.<region>.containers.appdomain.cloud/Curam\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}