{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./src/pages/deploy-spm/build-spm.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","name","_frontmatter","InlineNotification","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-deploy-spm-build-spm-mdx-911d3cda901f54b30c9d.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` Before proceeding with the following steps, ensure that the steps defined in `}<a parentName=\"p\" {...{\n          \"href\": \"/spm-kubernetes/deploy-spm/create_spm_db\"\n        }}>{`Create the SPM Database`}</a>{` are completed. This action should be only a one-off set-up.`}</p>\n    </InlineNotification>\n    <p>{`Building IBM® Cúram Social Program Management (SPM) for deployment to Kubernetes is similar to on-premises SPM builds with some differences.\nNotably, because the application server for the cloud environment is IBM® WebSphere® Liberty some target names are changed or are not supported.`}</p>\n    <p>{`Take the following steps to build SPM:`}</p>\n    <h2>{`Source the SPM environment variables`}</h2>\n    <p>{`Enter the directory where SPM is installed and source the SetEnvironment script; for example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd /opt/IBM/Curam/Development\n. SetEnvironment.sh\n`}</code></pre>\n    <h2>{`Set up AppServer.properties and verify the configuration`}</h2>\n    <p>{`Before you build SPM, add an `}<inlineCode parentName=\"p\">{`AppServer.properties`}</inlineCode>{` file to `}<inlineCode parentName=\"p\">{`$SERVER_DIR/project/properties`}</inlineCode>{`.  `}<inlineCode parentName=\"p\">{`AppServer.properties`}</inlineCode>{` must specify `}<inlineCode parentName=\"p\">{`as.vendor=WLP`}</inlineCode>{`; for example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-properties\"\n      }}>{`# Property to indicate that WebSphere Liberty is installed\nas.vendor=WLP\n\n# The username and password for the administrator role\nsecurity.username=websphere\n# Encrypt the plain-text password using 'build encrypt -Dpassword=<password>'\n# The encryption for the default password (\"websphere\") is as follows:\nsecurity.password=XOVRjjVTebM8gV953LGMLQ==\n\n# The name of the server on which the application will be hosted\ncuram.server.name=CuramServer\nserver.name=CuramServer\n\n# The Curam client HTTP port\ncuram.client.httpport=10101\n\n# The Curam web service port\ncuram.webservices.httpport=10102\n\n# Required for Building CuramBIRTViewer.ear\ncuram.server.port=2809\n`}</code></pre>\n    <p>{`To confirm your configuration, run the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $SERVER_DIR\n./build.sh configtest\n`}</code></pre>\n    <h2>{`Set up static content`}</h2>\n    <p>{`The static content server feature allows static content to be hosted on a separate web server.\nThis feature allows the web server that hosts the static content to be tuned for the static content and reduces the load on the main SPM application servers.\nThe option enables the relocation of static content to a separate server to allow for performance optimizations.`}</p>\n    <p>{`To enable static content, create a file called `}<inlineCode parentName=\"p\">{`curam-config.xml`}</inlineCode>{` in the following location `}<inlineCode parentName=\"p\">{`$CLIENT_DIR/components/custom/`}</inlineCode>{`.`}</p>\n    <p>{`Add the following to `}<inlineCode parentName=\"p\">{`curam-config.xml`}</inlineCode>{`:`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` The guidelines assume that the relative URL `}<inlineCode parentName=\"p\">{`/CuramStatic/`}</inlineCode>{` is being used.`}</p>\n    </InlineNotification>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<APP_CONFIG>\n  <STATIC_CONTENT_SERVER>\n    <URL>/CuramStatic/</URL>\n  </STATIC_CONTENT_SERVER>\n</APP_CONFIG>\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` For more information, see Static Content Server in the `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.10/com.ibm.curam.content.doc/WebClientReference/r_WEBCREF_Development1Staticcontentserver1.html\"\n        }}>{`Knowledge Center`}</a></p>\n    </InlineNotification>\n    <h2>{`Build the SPM server`}</h2>\n    <p>{`To build the SPM server, run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`./build.sh clean server\n`}</code></pre>\n    <h2>{`Build the database`}</h2>\n    <p>{`To build the SPM database, run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`./build.sh database prepare.application.data\n`}</code></pre>\n    <h2>{`Build the SPM client`}</h2>\n    <p>{`To build the SPM client, run the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $CLIENT_DIR\n./build.sh clean client\n`}</code></pre>\n    <h2>{`Build `}<inlineCode parentName=\"h2\">{`StaticContent.zip`}</inlineCode></h2>\n    <p>{`To build SPM `}<inlineCode parentName=\"p\">{`StaticContent.zip`}</inlineCode>{`, run the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $CLIENT_DIR\n./build.sh zip-static-content\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`StaticContent.zip`}</inlineCode>{` file that is created is in the `}<inlineCode parentName=\"p\">{`$CLIENT_DIR/build`}</inlineCode>{` folder and is needed for the steps in\n`}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/build-images/setup_docker_context\"\n      }}>{`Setting up the Docker® context`}</a>{`.`}</p>\n    <h2>{`Build the Cúram EAR files for WebSphere Liberty`}</h2>\n    <p>{`Modify the `}<inlineCode parentName=\"p\">{`requireServer`}</inlineCode>{` setting in the `}<inlineCode parentName=\"p\">{`$SERVER_DIR/project/config/deployment_packaging.xml`}</inlineCode>{` file. This command works on multiple platforms:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`sed -i 's/name=\"Curam\" requireServer=\"true\"/name=\"Curam\" requireServer=\"false\"/g' \\\\\n    $SERVER_DIR/project/config/deployment_packaging.xml\n`}</code></pre>\n    <p>{`To build the application EAR files for WebSphere Liberty, run the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $SERVER_DIR\n./build.sh libertyEAR -Dcuram.ejbserver.app.name=CuramServerCode\n./build.sh libertyEAR -Dserver.only=true \\\\\n                      -Dear.name=CuramServerCode \\\\\n                      -DSERVER_MODEL_NAME=CuramServerCode \\\\\n                      -Dcuram.ejbserver.app.name=CuramServerCode\n`}</code></pre>\n    <h3>{`Precompiling JSPs`}</h3>\n    <p>{`To improve initial page load performance, use the `}<inlineCode parentName=\"p\">{`precompile`}</inlineCode>{` target to precompile the JSPs in an application EAR file before deployment. Run the following target for each EAR file.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{`  The precompile target can take up to several hours to complete. Ensure that your environment is not significantly restricted regarding available CPU, memory, and free space in the `}<inlineCode parentName=\"p\">{`$CURAMSDEJ`}</inlineCode>{` file system.`}</p>\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` It is not required to run the `}<inlineCode parentName=\"p\">{`precompile`}</inlineCode>{` target on the `}<inlineCode parentName=\"p\">{`CuramServerCode.ear`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`CuramWebServices.ear`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Rest.ear`}</inlineCode>{`.`}</p>\n    </InlineNotification>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`./build.sh precompilejsp -Dear.file=$SERVER_DIR/build/ear/WLP/Curam.ear\n`}</code></pre>\n    <h2>{`Package an SPM release.zip file`}</h2>\n    <p>{`To package the build into a `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{` file, run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`./build.sh release -Dcreate.zip=true\n`}</code></pre>\n    <p>{`The .zip file that is created is in the `}<inlineCode parentName=\"p\">{`$SERVER_DIR/release`}</inlineCode>{` folder and is needed for the steps in\n`}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/build-images/setup_docker_context\"\n      }}>{`Setting up the Docker environment`}</a>{`.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` Check the zip file in later stages to ensure that its integrity or size are unchanged when copying to different directories or machines.`}</p>\n      <p>{`On OSX and Red Hat, a zip file ends with `}<inlineCode parentName=\"p\">{`.zip`}</inlineCode>{` and looks like a white file.`}</p>\n      <p>{`On Windows, a zip file ends with `}<inlineCode parentName=\"p\">{`.zip`}</inlineCode>{` and looks like a folder.`}</p>\n    </InlineNotification>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}