{"version":3,"sources":["webpack:///./src/pages/deployment/secrets.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["name","_frontmatter","InlineNotification","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports"],"mappings":"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","file":"component---src-pages-deployment-secrets-mdx-dcae0f9cd8691519fe5c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`All values defined in the Helm chart `}<inlineCode parentName=\"p\">{`values.yaml`}</inlineCode>{` file or in your custom override file become part of the Helm release definition.`}</p>\n    <p>{`As of Helm v3, the release definition is stored as a Kubernetes Secret resource by default, as opposed to a ConfigMap.\nThis provides additional security to any credentials defined as values in the release, in comparison to release definitions being stored as ConfigMaps in Helm v2.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`You may find additional information about Secrets and how to define them in Kubernetes in the official documentation:`}</p>\n      <ul>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://kubernetes.io/docs/concepts/configuration/secret/\"\n          }}>{`Kubernetes Secrets`}</a></li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/\"\n          }}>{`Encrypting Secret Data at Rest`}</a></li>\n      </ul>\n    </InlineNotification>\n    <p>{`By default, the `}<inlineCode parentName=\"p\">{`spm`}</inlineCode>{` chart will generate all of the secrets it needs. However, you may want to manage them outside of a Helm release, and point to existing secrets.\nThe following is a list of the Secrets which may be provided externally, and the data they must provide.`}</p>\n    <p>{`The descriptions refer to 2 variants of encryption/encoding: SPM and XOR.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://ibm.biz/EncryptingSPMPasswords\"\n        }}>{`SPM encryption`}</a>{` refers to the values obtained from the `}<inlineCode parentName=\"li\">{`build.sh encrypt -Dpassword=<password>`}</inlineCode>{` command.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_command_securityutil.html\"\n        }}>{`XOR encoding`}</a>{` refers to the values obtained from the `}<inlineCode parentName=\"li\">{`$WLP_HOME/bin/securityUtility encode <password>`}</inlineCode>{` command.`}</li>\n    </ul>\n    <h2>{`SPM Secrets`}</h2>\n    <p>{`The secrets are structured the following way - the top-level key is the property, which must be set in the override values file, and nested in it are the keys that must be defined for the secret along with their description.\nIf the following top-level keys are not provided, the secrets will be generated by the Helm chart, prefixed with the Helm release name.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`global.imagePullSecret.secretName`}</inlineCode>{` (type: kubernetes.io/dockerconfigjson)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`global.database.credsSecretName`}</inlineCode>{` (type: Opaque)`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SPM_DB_USR`}</inlineCode>{`: Database username for datastore connections`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SPM_DB_PSW`}</inlineCode>{`: SPM encrypted password for the datastore connections (used by Batch processes)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`XOR_DB_PSW`}</inlineCode>{`: XOR encoded password for the datastore connections (used by WebSphere Liberty)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`global.mq.queueManager.secret.name`}</inlineCode>{` (type: Opaque)`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`adminPasswordKey`}</inlineCode>{`: Password for the `}<inlineCode parentName=\"li\">{`admin`}</inlineCode>{` user in the `}<a parentName=\"li\" {...{\n              \"href\": \"https://hub.docker.com/r/ibmcom/mq\"\n            }}>{`IBM MQ Docker image`}</a></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`appPasswordKey`}</inlineCode>{`: Password for the `}<inlineCode parentName=\"li\">{`app`}</inlineCode>{` user in the `}<a parentName=\"li\" {...{\n              \"href\": \"https://hub.docker.com/r/ibmcom/mq\"\n            }}>{`IBM MQ Docker image`}</a></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`appUsername`}</inlineCode>{`: Username for MQ connections`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`global.mq.tlsSecretName`}</inlineCode>{` (type: variable - see options)`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`When IBM MQ is hosted on VMs outside the cluster (type: Opaque):`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`key_{{ $qmgrName }}.arm`}</inlineCode>{`: A certificate file for each of the Queue Managers (one for every application)`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`When IBM MQ is hosted in containers inside the cluster (type: TLS)`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tls.key`}</inlineCode>{`: (optional) A private key file to configure in IBM MQ Containers`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tls.crt`}</inlineCode>{`: (optional) A certificate file to configure in IBM MQ Containers`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`apps.ltpaKeys.secretName`}</inlineCode>{` (type: Opaque)`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ltpa.keys`}</inlineCode>{`: Contents of the `}<inlineCode parentName=\"li\">{`ltpa.keys`}</inlineCode>{` file generated using `}<inlineCode parentName=\"li\">{`securityUtility createLTPAKeys --password=<password> --file=ltpa.keys`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`passwordKey`}</inlineCode>{`: XOR encoded password for the `}<inlineCode parentName=\"li\">{`ltpa.keys`}</inlineCode>{` file`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`apps.systemUser.credsSecretName`}</inlineCode>{` (type: Opaque)`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SYSTEM_USER`}</inlineCode>{`: The user under which JMS messages are executed (default: `}<a parentName=\"li\" {...{\n              \"href\": \"https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.4/com.ibm.curam.content.doc/Security/c_SECHAND_Securitynonuserprocesses1JmsMessaging1.html\"\n            }}>{`SYSTEM`}</a>{`)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SYSTEM_PASSWORD`}</inlineCode>{`: XOR encoded password for `}<inlineCode parentName=\"li\">{`SYSTEM_USER`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`apps.wlpAdmin.secretName`}</inlineCode>{` (type: Opaque)`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`KeystorePassword`}</inlineCode>{`: Password for the default WebSphere Liberty keystore`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`XORKeystorePassword`}</inlineCode>{`: XOR encoded password for the default WebSphere Liberty keystore`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`WebSphereUsername`}</inlineCode>{`: Username of the administrative user for accessing the `}<a parentName=\"li\" {...{\n              \"href\": \"https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/twlp_ui.html\"\n            }}>{`Liberty Admin Center`}</a>{`, when enabled`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`WebSpherePassword`}</inlineCode>{`: Password of the Liberty administrative user`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`XORWebSpherePassword`}</inlineCode>{`: XOR encoded password of the Liberty administrative user`}</li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}